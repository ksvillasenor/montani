name: Deploy CloudFormation

on:
  workflow_dispatch:
    inputs:
      cluster:
        description: 'ECS Cluster name'
        required: true
      subnets:
        description: 'Comma-separated subnet ids'
        required: true
      security_groups:
        description: 'Comma-separated security group ids'
        required: true
      image_uri:
        description: 'Full ECR image URI (repo:tag)'
        required: true
      stack_name:
        description: 'CloudFormation stack name'
        required: true

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-southeast-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (needed for cloudformation.yml)
        uses: actions/checkout@v4

      - name: Configure AWS credentials (via OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy CloudFormation stack
        run: |
          # Convert comma-separated subnets and security groups into space-separated lists
          subnets=$(echo "${{ github.event.inputs.subnets }}" | tr ',' ' ')
          security_groups=$(echo "${{ github.event.inputs.security_groups }}" | tr ',' ' ')

          echo "Deploying stack ${{ github.event.inputs.stack_name }} using image ${{ github.event.inputs.image_uri }}"
          echo "Using subnets: $subnets"
          echo "Using security groups: $security_groups"

          aws cloudformation deploy \
            --stack-name "${{ github.event.inputs.stack_name }}" \
            --template-file cloudformation.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              ClusterName="${{ github.event.inputs.cluster }}" \
              SubnetIds="$subnets" \
              SecurityGroupIds="$security_groups" \
              ImageUri="${{ github.event.inputs.image_uri }}"
