AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Deploy simple CLI app as an hourly scheduled ECS Fargate task.
  Provide ECS Cluster name, subnets and security group(s) as parameters.

Parameters:
  ClusterName:
    Type: String
    Description: Name of the existing ECS cluster
  SubnetIds:
    Type: List<String>
    Description: Subnet IDs for Fargate tasks (at least 1)
  SecurityGroupIds:
    Type: List<String>
    Description: Security Group IDs for the task ENIs
  ImageUri:
    Type: String
    Description: Full ECR image URI (e.g. <acct>.dkr.ecr.region.amazonaws.com/repo:tag)
  TaskCpu:
    Type: String
    Default: "256"
    Description: CPU units (e.g. 256)
  TaskMemory:
    Type: String
    Default: "512"
    Description: Memory (MB) for the task (e.g. 512)

Resources:

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "myapp-task-exec-role-${AWS::StackName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  MyAppTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: myapp-task
      Cpu: !Ref TaskCpu
      Memory: !Ref TaskMemory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: myapp
          Image: !Ref ImageUri
          Essential: true
          EntryPoint: ["python", "app.py"]
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub "/ecs/myapp-${AWS::StackName}"
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: myapp

  EventRoleForScheduler:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "myapp-event-role-${AWS::StackName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowRunTask
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RunTask
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"

  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "myapp-hourly-rule-${AWS::StackName}"
      Description: "Run the myapp Fargate task every hour"
      ScheduleExpression: "cron(0 * * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !Sub "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ClusterName}"
          Id: "MyAppEcsTarget"
          RoleArn: !GetAtt EventRoleForScheduler.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref MyAppTaskDefinition
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                Subnets: !Ref SubnetIds
                SecurityGroups: !Ref SecurityGroupIds
            PlatformVersion: LATEST

Outputs:
  TaskDefinitionArn:
    Description: The ECS task definition ARN
    Value: !Ref MyAppTaskDefinition

  ScheduledRuleName:
    Description: EventBridge rule name
    Value: !Ref ScheduledRule
